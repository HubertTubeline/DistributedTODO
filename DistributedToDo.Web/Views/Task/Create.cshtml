@model DistributedToDo.Web.Models.TaskModel

@{
    ViewBag.Title = "Create";
}
<p>@ViewBag.Message</p>
<h2>Create</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <span class="control-label col-md-2">@Resources.Resource.Name</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">@Resources.Resource.Description</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">@Resources.Resource.Date</span>
            <div class="col-md-10">
                <input type="date" name="Date" id="date" />
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">@Resources.Resource.Time</span>
            <div class="col-md-10">
                <input type="time" name="Time" id="time" />
            </div>
        </div>
        <input type="hidden" id="geoLat" name="GeoLat" />
        <input type="hidden" id="geoLong" name="GeoLong" />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Resource.CreateTask class="btn btn-default" />
            </div>
        </div>
    </div>
    <div>@Resources.Resource.SelectPlace</div>
    <div id="map"></div>

}
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUfLVNhJKzJWBFEzqpkgIYwmdkIlRbsh4&callback=initMapCreate"
        type="text/javascript"></script>
@Scripts.Render("~/Scripts/map.js")