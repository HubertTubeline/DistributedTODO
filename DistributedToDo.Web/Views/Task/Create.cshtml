@model DistributedToDo.Web.Models.TaskModel

@{
    ViewBag.Title = "Create";
}
<p>@ViewBag.Message</p>
<h2>Create</h2>

@using (Html.BeginForm())
{
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <span class="control-label col-md-2">@Resources.Resource.Name</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <span class="control-label col-md-2">@Resources.Resource.Description</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <span class="control-label col-md-2">@Resources.Resource.Date</span>
        <div class="col-md-10">
            <input type="date" name="Date" id="date" />
        </div>
    </div>

    <div class="form-group">
        <span class="control-label col-md-2">@Resources.Resource.Time</span>
        <div class="col-md-10">
            <input type="time" name="Time" id="time" />
        </div>
    </div>
    <input type="hidden" id="geoLat" name="GeoLat" />
    <input type="hidden" id="geoLong" name="GeoLong"/>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value=@Resources.Resource.CreateTask class="btn btn-default" />
        </div>
    </div>
</div>
        <div>@Resources.Resource.SelectPlace</div>
    <div id="map"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUfLVNhJKzJWBFEzqpkgIYwmdkIlRbsh4"></script>
        <script>
            var marker = new google.maps.Marker({ position: google.maps.LatLng(0, 0) });
            function initialize() {
                var center = new google.maps.LatLng(35, 0);
                var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 2,
                center: center
                });

                // This event listener calls addMarker() when the map is clicked.
                google.maps.event.addListener(map, 'click', function (event) {
                    addMarker(event.latLng, map);
                    document.getElementById('geoLat').value = event.latLng.lat();
                    document.getElementById('geoLong').value = event.latLng.lng();
            });
            }

            // Adds a marker to the map.
            function addMarker(location, map) {
                // Add the marker at the clicked location, and add the next-available label
                // from the array of alphabetical characters.
                marker.setMap(null);
                marker = new google.maps.Marker({
                position: location, 
                    map: map
                });
            }
            google.maps.event.addDomListener(window, 'load', initialize);
    </script>
}
